name: Build & Deploy (minified) to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install CLI optimizers
        run: |
          npm i -g html-minifier-terser@7.2.0 svgo@3.3.2 sharp-cli@4.2.0

      - name: Build dist folder
        run: |
          set -e
          rm -rf dist
          mkdir -p dist
          # Copy everything except .git and dist
          rsync -a --exclude 'dist' --exclude '.git' ./ dist/

          # Minify HTML (handles inline CSS/JS)
          find dist -type f -name "*.html" -print0 | xargs -0 -I{} sh -c \
            'html-minifier-terser --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --minify-css true --minify-js true -o "{}.min" "{}" && mv "{}.min" "{}"'

          # Optimize SVGs
          find dist -type f -name "*.svg" -print0 | xargs -0 -I{} svgo {}

          # Compress PNG/JPG (best-effort with sharp)
          find dist -type f \( -iname "*.png" -o -iname "*.jpg" -o -iname "*.jpeg" \) -print0 | \
          xargs -0 -I{} sh -c 'sharp -i "{}" -o "{}" --progressive --quality 82 >/dev/null 2>&1 || true'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
# Redeploy trigger comment - harmless edit to force Pages redeploy

# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload only the mstack-site folder
          path: './mstack-site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

